Bitwise OR (|)
Returns 1 if either bit is 1 or both are 1.

Bitwise AND (&)
Returns 1 only if both bits are 1.

Bitwise XOR (^)
Returns 1 if exactly one of the bits is 1, but not both. (Exclusive OR)

Bitwise NOT (~)
Equivalent to - (x + 1).


Quick Examples:

3 | 2 = 3
0011
0010
----
0011


3 & 2 = 2
0011
0010
----
0010


3 ^ 2 = 1
0011
0010
----
0001


~3 = -4
0011 -> NOT
1100 -> -4 in Two's Complement


Bitwise Left Shift (<<):
3 << 1 equals 6
0011 << 1
0110  (6 in decimal)

Bitwise Right Shift (>>):
Example: 1 >> 1 equals 0
0001 >> 1
0000  (0 in decimal)